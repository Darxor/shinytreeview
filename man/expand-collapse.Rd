% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server-treeview.R
\name{expand-collapse}
\alias{expand-collapse}
\alias{expandTreeview}
\alias{collapseTreeview}
\title{Expand or collapse a \code{treeviewInput}}
\usage{
expandTreeview(
  inputId,
  nodeId = NULL,
  levels = 1,
  session = shiny::getDefaultReactiveDomain()
)

collapseTreeview(
  inputId,
  nodeId = NULL,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{inputId}{The id of the input object.}

\item{nodeId}{Id of the node to expand or collapse,
use \code{input$<inputId>_nodes} to see the Ids.
If \code{NULL} expand the all tree.}

\item{levels}{Levels to expand.}

\item{session}{The session object passed to function given to shinyServer.}
}
\value{
None.
}
\description{
Expand or collapse a \code{treeviewInput}
}
\examples{

library(shiny)
library(shinytreeview)

data("countries")

ui <- fluidPage(
  tags$h3("treeviewInput expand/collapse example"),
  fluidRow(
    column(
      width = 4,
      treeviewInput(
        inputId = "country",
        label = "Choose a country:",
        choices = make_tree(
          countries, c("continent", "subregion", "name")
        ),
        width = "100\%"
      )
    ),
    column(
      width = 8,
      actionButton("expandAll", "Expand all"),
      actionButton("expandWAfrica", "Expand Western Africa"),
      actionButton("collapseAll", "Collapse all"),
      tags$br(),
      tags$b("Selected country:"),
      verbatimTextOutput(outputId = "result")
    )
  )
)

server <- function(input, output, session) {

  output$result <- renderPrint({
    input$country
  })

  observeEvent(input$expandAll, {
    expandTreeview("country", levels = 3)
  })

  observeEvent(input$expandWAfrica, {
    nodes <- input$country_nodes
    w_africa <- nodes[nodes$text == "Western Africa", "nodeId"]
    print(w_africa)
    expandTreeview("country", nodeId = w_africa, levels = 3)
  })

  observeEvent(input$collapseAll, {
    collapseTreeview("country")
  })
}

if (interactive())
  shinyApp(ui, server)
}
